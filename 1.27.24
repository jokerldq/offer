import java.util.ArrayList;
/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {   
       ArrayList<ArrayList<Integer>> result=new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> arr=new ArrayList<Integer>();
        int sum=0;
    public ArrayList<ArrayList<Integer>> FindPath(TreeNode root,int target) {
     
        if(root==null){
            return result;
        }
        boolean haveLeaf= root.left==null&&root.right==null;
        sum+=root.val;
        arr.add(root.val);
        if(sum==target&&haveLeaf){
            ArrayList<Integer> path=new ArrayList<Integer>();
            for(int i=0;i<arr.size();i++){
                path.add(arr.get(i));
            }
            result.add(path);
        }
        if(sum<target&&root.left!=null){
            FindPath(root.left,target);
        }
        if(sum<target&&root.right!=null){
            FindPath(root.right,target);
        }
        sum-=root.val;
        arr.remove(arr.size()-1);
        return result;
    }
}
